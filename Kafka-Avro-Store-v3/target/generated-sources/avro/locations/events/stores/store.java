/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package locations.events.stores;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class store extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -7488984022725770739L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"store\",\"namespace\":\"locations.events.stores\",\"fields\":[{\"name\":\"place_id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"brand\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"legacy_sainsburys_store_code\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"legacy_argos_store_code\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"ana_number\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"store_type\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"display_name\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"parent_store\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"current_status\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"future_status\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"open_date\",\"type\":{\"type\":\"int\",\"logicalType\":\"date\"}},{\"name\":\"close_date\",\"type\":[\"null\",{\"type\":\"int\",\"logicalType\":\"date\"}]},{\"name\":\"store_opening_message\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"currency_code\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"vat_region\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"phone\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"manager\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"store_locator_url\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"region_id\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"region\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"zone_id\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"zone\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"selling_square_feet\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"total_square_feet\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]}],\"subject\":\"stores\",\"version\":1}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();
  static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.data.TimeConversions.DateConversion());
  }

  private static final BinaryMessageEncoder<store> ENCODER =
      new BinaryMessageEncoder<store>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<store> DECODER =
      new BinaryMessageDecoder<store>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<store> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<store> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<store> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<store>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this store to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a store from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a store instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static store fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.String place_id;
  private java.lang.String brand;
  private java.lang.String legacy_sainsburys_store_code;
  private java.lang.String legacy_argos_store_code;
  private java.lang.String ana_number;
  private java.lang.String store_type;
  private java.lang.String name;
  private java.lang.String display_name;
  private java.lang.String parent_store;
  private java.lang.String current_status;
  private java.lang.String future_status;
  private java.time.LocalDate open_date;
  private java.time.LocalDate close_date;
  private java.lang.String store_opening_message;
  private java.lang.String currency_code;
  private java.lang.String vat_region;
  private java.lang.String phone;
  private java.lang.String manager;
  private java.lang.String store_locator_url;
  private java.lang.String region_id;
  private java.lang.String region;
  private java.lang.String zone_id;
  private java.lang.String zone;
  private java.lang.String selling_square_feet;
  private java.lang.String total_square_feet;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public store() {}

  /**
   * All-args constructor.
   * @param place_id The new value for place_id
   * @param brand The new value for brand
   * @param legacy_sainsburys_store_code The new value for legacy_sainsburys_store_code
   * @param legacy_argos_store_code The new value for legacy_argos_store_code
   * @param ana_number The new value for ana_number
   * @param store_type The new value for store_type
   * @param name The new value for name
   * @param display_name The new value for display_name
   * @param parent_store The new value for parent_store
   * @param current_status The new value for current_status
   * @param future_status The new value for future_status
   * @param open_date The new value for open_date
   * @param close_date The new value for close_date
   * @param store_opening_message The new value for store_opening_message
   * @param currency_code The new value for currency_code
   * @param vat_region The new value for vat_region
   * @param phone The new value for phone
   * @param manager The new value for manager
   * @param store_locator_url The new value for store_locator_url
   * @param region_id The new value for region_id
   * @param region The new value for region
   * @param zone_id The new value for zone_id
   * @param zone The new value for zone
   * @param selling_square_feet The new value for selling_square_feet
   * @param total_square_feet The new value for total_square_feet
   */
  public store(java.lang.String place_id, java.lang.String brand, java.lang.String legacy_sainsburys_store_code, java.lang.String legacy_argos_store_code, java.lang.String ana_number, java.lang.String store_type, java.lang.String name, java.lang.String display_name, java.lang.String parent_store, java.lang.String current_status, java.lang.String future_status, java.time.LocalDate open_date, java.time.LocalDate close_date, java.lang.String store_opening_message, java.lang.String currency_code, java.lang.String vat_region, java.lang.String phone, java.lang.String manager, java.lang.String store_locator_url, java.lang.String region_id, java.lang.String region, java.lang.String zone_id, java.lang.String zone, java.lang.String selling_square_feet, java.lang.String total_square_feet) {
    this.place_id = place_id;
    this.brand = brand;
    this.legacy_sainsburys_store_code = legacy_sainsburys_store_code;
    this.legacy_argos_store_code = legacy_argos_store_code;
    this.ana_number = ana_number;
    this.store_type = store_type;
    this.name = name;
    this.display_name = display_name;
    this.parent_store = parent_store;
    this.current_status = current_status;
    this.future_status = future_status;
    this.open_date = open_date;
    this.close_date = close_date;
    this.store_opening_message = store_opening_message;
    this.currency_code = currency_code;
    this.vat_region = vat_region;
    this.phone = phone;
    this.manager = manager;
    this.store_locator_url = store_locator_url;
    this.region_id = region_id;
    this.region = region;
    this.zone_id = zone_id;
    this.zone = zone;
    this.selling_square_feet = selling_square_feet;
    this.total_square_feet = total_square_feet;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return place_id;
    case 1: return brand;
    case 2: return legacy_sainsburys_store_code;
    case 3: return legacy_argos_store_code;
    case 4: return ana_number;
    case 5: return store_type;
    case 6: return name;
    case 7: return display_name;
    case 8: return parent_store;
    case 9: return current_status;
    case 10: return future_status;
    case 11: return open_date;
    case 12: return close_date;
    case 13: return store_opening_message;
    case 14: return currency_code;
    case 15: return vat_region;
    case 16: return phone;
    case 17: return manager;
    case 18: return store_locator_url;
    case 19: return region_id;
    case 20: return region;
    case 21: return zone_id;
    case 22: return zone;
    case 23: return selling_square_feet;
    case 24: return total_square_feet;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  private static final org.apache.avro.Conversion<?>[] conversions =
      new org.apache.avro.Conversion<?>[] {
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      new org.apache.avro.data.TimeConversions.DateConversion(),
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null
  };

  @Override
  public org.apache.avro.Conversion<?> getConversion(int field) {
    return conversions[field];
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: place_id = value$ != null ? value$.toString() : null; break;
    case 1: brand = value$ != null ? value$.toString() : null; break;
    case 2: legacy_sainsburys_store_code = value$ != null ? value$.toString() : null; break;
    case 3: legacy_argos_store_code = value$ != null ? value$.toString() : null; break;
    case 4: ana_number = value$ != null ? value$.toString() : null; break;
    case 5: store_type = value$ != null ? value$.toString() : null; break;
    case 6: name = value$ != null ? value$.toString() : null; break;
    case 7: display_name = value$ != null ? value$.toString() : null; break;
    case 8: parent_store = value$ != null ? value$.toString() : null; break;
    case 9: current_status = value$ != null ? value$.toString() : null; break;
    case 10: future_status = value$ != null ? value$.toString() : null; break;
    case 11: open_date = (java.time.LocalDate)value$; break;
    case 12: close_date = (java.time.LocalDate)value$; break;
    case 13: store_opening_message = value$ != null ? value$.toString() : null; break;
    case 14: currency_code = value$ != null ? value$.toString() : null; break;
    case 15: vat_region = value$ != null ? value$.toString() : null; break;
    case 16: phone = value$ != null ? value$.toString() : null; break;
    case 17: manager = value$ != null ? value$.toString() : null; break;
    case 18: store_locator_url = value$ != null ? value$.toString() : null; break;
    case 19: region_id = value$ != null ? value$.toString() : null; break;
    case 20: region = value$ != null ? value$.toString() : null; break;
    case 21: zone_id = value$ != null ? value$.toString() : null; break;
    case 22: zone = value$ != null ? value$.toString() : null; break;
    case 23: selling_square_feet = value$ != null ? value$.toString() : null; break;
    case 24: total_square_feet = value$ != null ? value$.toString() : null; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'place_id' field.
   * @return The value of the 'place_id' field.
   */
  public java.lang.String getPlaceId() {
    return place_id;
  }



  /**
   * Gets the value of the 'brand' field.
   * @return The value of the 'brand' field.
   */
  public java.lang.String getBrand() {
    return brand;
  }



  /**
   * Gets the value of the 'legacy_sainsburys_store_code' field.
   * @return The value of the 'legacy_sainsburys_store_code' field.
   */
  public java.lang.String getLegacySainsburysStoreCode() {
    return legacy_sainsburys_store_code;
  }



  /**
   * Gets the value of the 'legacy_argos_store_code' field.
   * @return The value of the 'legacy_argos_store_code' field.
   */
  public java.lang.String getLegacyArgosStoreCode() {
    return legacy_argos_store_code;
  }



  /**
   * Gets the value of the 'ana_number' field.
   * @return The value of the 'ana_number' field.
   */
  public java.lang.String getAnaNumber() {
    return ana_number;
  }



  /**
   * Gets the value of the 'store_type' field.
   * @return The value of the 'store_type' field.
   */
  public java.lang.String getStoreType() {
    return store_type;
  }



  /**
   * Gets the value of the 'name' field.
   * @return The value of the 'name' field.
   */
  public java.lang.String getName() {
    return name;
  }



  /**
   * Gets the value of the 'display_name' field.
   * @return The value of the 'display_name' field.
   */
  public java.lang.String getDisplayName() {
    return display_name;
  }



  /**
   * Gets the value of the 'parent_store' field.
   * @return The value of the 'parent_store' field.
   */
  public java.lang.String getParentStore() {
    return parent_store;
  }



  /**
   * Gets the value of the 'current_status' field.
   * @return The value of the 'current_status' field.
   */
  public java.lang.String getCurrentStatus() {
    return current_status;
  }



  /**
   * Gets the value of the 'future_status' field.
   * @return The value of the 'future_status' field.
   */
  public java.lang.String getFutureStatus() {
    return future_status;
  }



  /**
   * Gets the value of the 'open_date' field.
   * @return The value of the 'open_date' field.
   */
  public java.time.LocalDate getOpenDate() {
    return open_date;
  }



  /**
   * Gets the value of the 'close_date' field.
   * @return The value of the 'close_date' field.
   */
  public java.time.LocalDate getCloseDate() {
    return close_date;
  }



  /**
   * Gets the value of the 'store_opening_message' field.
   * @return The value of the 'store_opening_message' field.
   */
  public java.lang.String getStoreOpeningMessage() {
    return store_opening_message;
  }



  /**
   * Gets the value of the 'currency_code' field.
   * @return The value of the 'currency_code' field.
   */
  public java.lang.String getCurrencyCode() {
    return currency_code;
  }



  /**
   * Gets the value of the 'vat_region' field.
   * @return The value of the 'vat_region' field.
   */
  public java.lang.String getVatRegion() {
    return vat_region;
  }



  /**
   * Gets the value of the 'phone' field.
   * @return The value of the 'phone' field.
   */
  public java.lang.String getPhone() {
    return phone;
  }



  /**
   * Gets the value of the 'manager' field.
   * @return The value of the 'manager' field.
   */
  public java.lang.String getManager() {
    return manager;
  }



  /**
   * Gets the value of the 'store_locator_url' field.
   * @return The value of the 'store_locator_url' field.
   */
  public java.lang.String getStoreLocatorUrl() {
    return store_locator_url;
  }



  /**
   * Gets the value of the 'region_id' field.
   * @return The value of the 'region_id' field.
   */
  public java.lang.String getRegionId() {
    return region_id;
  }



  /**
   * Gets the value of the 'region' field.
   * @return The value of the 'region' field.
   */
  public java.lang.String getRegion() {
    return region;
  }



  /**
   * Gets the value of the 'zone_id' field.
   * @return The value of the 'zone_id' field.
   */
  public java.lang.String getZoneId() {
    return zone_id;
  }



  /**
   * Gets the value of the 'zone' field.
   * @return The value of the 'zone' field.
   */
  public java.lang.String getZone() {
    return zone;
  }



  /**
   * Gets the value of the 'selling_square_feet' field.
   * @return The value of the 'selling_square_feet' field.
   */
  public java.lang.String getSellingSquareFeet() {
    return selling_square_feet;
  }



  /**
   * Gets the value of the 'total_square_feet' field.
   * @return The value of the 'total_square_feet' field.
   */
  public java.lang.String getTotalSquareFeet() {
    return total_square_feet;
  }



  /**
   * Creates a new store RecordBuilder.
   * @return A new store RecordBuilder
   */
  public static locations.events.stores.store.Builder newBuilder() {
    return new locations.events.stores.store.Builder();
  }

  /**
   * Creates a new store RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new store RecordBuilder
   */
  public static locations.events.stores.store.Builder newBuilder(locations.events.stores.store.Builder other) {
    if (other == null) {
      return new locations.events.stores.store.Builder();
    } else {
      return new locations.events.stores.store.Builder(other);
    }
  }

  /**
   * Creates a new store RecordBuilder by copying an existing store instance.
   * @param other The existing instance to copy.
   * @return A new store RecordBuilder
   */
  public static locations.events.stores.store.Builder newBuilder(locations.events.stores.store other) {
    if (other == null) {
      return new locations.events.stores.store.Builder();
    } else {
      return new locations.events.stores.store.Builder(other);
    }
  }

  /**
   * RecordBuilder for store instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<store>
    implements org.apache.avro.data.RecordBuilder<store> {

    private java.lang.String place_id;
    private java.lang.String brand;
    private java.lang.String legacy_sainsburys_store_code;
    private java.lang.String legacy_argos_store_code;
    private java.lang.String ana_number;
    private java.lang.String store_type;
    private java.lang.String name;
    private java.lang.String display_name;
    private java.lang.String parent_store;
    private java.lang.String current_status;
    private java.lang.String future_status;
    private java.time.LocalDate open_date;
    private java.time.LocalDate close_date;
    private java.lang.String store_opening_message;
    private java.lang.String currency_code;
    private java.lang.String vat_region;
    private java.lang.String phone;
    private java.lang.String manager;
    private java.lang.String store_locator_url;
    private java.lang.String region_id;
    private java.lang.String region;
    private java.lang.String zone_id;
    private java.lang.String zone;
    private java.lang.String selling_square_feet;
    private java.lang.String total_square_feet;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(locations.events.stores.store.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.place_id)) {
        this.place_id = data().deepCopy(fields()[0].schema(), other.place_id);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.brand)) {
        this.brand = data().deepCopy(fields()[1].schema(), other.brand);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.legacy_sainsburys_store_code)) {
        this.legacy_sainsburys_store_code = data().deepCopy(fields()[2].schema(), other.legacy_sainsburys_store_code);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.legacy_argos_store_code)) {
        this.legacy_argos_store_code = data().deepCopy(fields()[3].schema(), other.legacy_argos_store_code);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.ana_number)) {
        this.ana_number = data().deepCopy(fields()[4].schema(), other.ana_number);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.store_type)) {
        this.store_type = data().deepCopy(fields()[5].schema(), other.store_type);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.name)) {
        this.name = data().deepCopy(fields()[6].schema(), other.name);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.display_name)) {
        this.display_name = data().deepCopy(fields()[7].schema(), other.display_name);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.parent_store)) {
        this.parent_store = data().deepCopy(fields()[8].schema(), other.parent_store);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.current_status)) {
        this.current_status = data().deepCopy(fields()[9].schema(), other.current_status);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.future_status)) {
        this.future_status = data().deepCopy(fields()[10].schema(), other.future_status);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.open_date)) {
        this.open_date = data().deepCopy(fields()[11].schema(), other.open_date);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (isValidValue(fields()[12], other.close_date)) {
        this.close_date = data().deepCopy(fields()[12].schema(), other.close_date);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
      if (isValidValue(fields()[13], other.store_opening_message)) {
        this.store_opening_message = data().deepCopy(fields()[13].schema(), other.store_opening_message);
        fieldSetFlags()[13] = other.fieldSetFlags()[13];
      }
      if (isValidValue(fields()[14], other.currency_code)) {
        this.currency_code = data().deepCopy(fields()[14].schema(), other.currency_code);
        fieldSetFlags()[14] = other.fieldSetFlags()[14];
      }
      if (isValidValue(fields()[15], other.vat_region)) {
        this.vat_region = data().deepCopy(fields()[15].schema(), other.vat_region);
        fieldSetFlags()[15] = other.fieldSetFlags()[15];
      }
      if (isValidValue(fields()[16], other.phone)) {
        this.phone = data().deepCopy(fields()[16].schema(), other.phone);
        fieldSetFlags()[16] = other.fieldSetFlags()[16];
      }
      if (isValidValue(fields()[17], other.manager)) {
        this.manager = data().deepCopy(fields()[17].schema(), other.manager);
        fieldSetFlags()[17] = other.fieldSetFlags()[17];
      }
      if (isValidValue(fields()[18], other.store_locator_url)) {
        this.store_locator_url = data().deepCopy(fields()[18].schema(), other.store_locator_url);
        fieldSetFlags()[18] = other.fieldSetFlags()[18];
      }
      if (isValidValue(fields()[19], other.region_id)) {
        this.region_id = data().deepCopy(fields()[19].schema(), other.region_id);
        fieldSetFlags()[19] = other.fieldSetFlags()[19];
      }
      if (isValidValue(fields()[20], other.region)) {
        this.region = data().deepCopy(fields()[20].schema(), other.region);
        fieldSetFlags()[20] = other.fieldSetFlags()[20];
      }
      if (isValidValue(fields()[21], other.zone_id)) {
        this.zone_id = data().deepCopy(fields()[21].schema(), other.zone_id);
        fieldSetFlags()[21] = other.fieldSetFlags()[21];
      }
      if (isValidValue(fields()[22], other.zone)) {
        this.zone = data().deepCopy(fields()[22].schema(), other.zone);
        fieldSetFlags()[22] = other.fieldSetFlags()[22];
      }
      if (isValidValue(fields()[23], other.selling_square_feet)) {
        this.selling_square_feet = data().deepCopy(fields()[23].schema(), other.selling_square_feet);
        fieldSetFlags()[23] = other.fieldSetFlags()[23];
      }
      if (isValidValue(fields()[24], other.total_square_feet)) {
        this.total_square_feet = data().deepCopy(fields()[24].schema(), other.total_square_feet);
        fieldSetFlags()[24] = other.fieldSetFlags()[24];
      }
    }

    /**
     * Creates a Builder by copying an existing store instance
     * @param other The existing instance to copy.
     */
    private Builder(locations.events.stores.store other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.place_id)) {
        this.place_id = data().deepCopy(fields()[0].schema(), other.place_id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.brand)) {
        this.brand = data().deepCopy(fields()[1].schema(), other.brand);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.legacy_sainsburys_store_code)) {
        this.legacy_sainsburys_store_code = data().deepCopy(fields()[2].schema(), other.legacy_sainsburys_store_code);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.legacy_argos_store_code)) {
        this.legacy_argos_store_code = data().deepCopy(fields()[3].schema(), other.legacy_argos_store_code);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.ana_number)) {
        this.ana_number = data().deepCopy(fields()[4].schema(), other.ana_number);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.store_type)) {
        this.store_type = data().deepCopy(fields()[5].schema(), other.store_type);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.name)) {
        this.name = data().deepCopy(fields()[6].schema(), other.name);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.display_name)) {
        this.display_name = data().deepCopy(fields()[7].schema(), other.display_name);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.parent_store)) {
        this.parent_store = data().deepCopy(fields()[8].schema(), other.parent_store);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.current_status)) {
        this.current_status = data().deepCopy(fields()[9].schema(), other.current_status);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.future_status)) {
        this.future_status = data().deepCopy(fields()[10].schema(), other.future_status);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.open_date)) {
        this.open_date = data().deepCopy(fields()[11].schema(), other.open_date);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.close_date)) {
        this.close_date = data().deepCopy(fields()[12].schema(), other.close_date);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.store_opening_message)) {
        this.store_opening_message = data().deepCopy(fields()[13].schema(), other.store_opening_message);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.currency_code)) {
        this.currency_code = data().deepCopy(fields()[14].schema(), other.currency_code);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.vat_region)) {
        this.vat_region = data().deepCopy(fields()[15].schema(), other.vat_region);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.phone)) {
        this.phone = data().deepCopy(fields()[16].schema(), other.phone);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.manager)) {
        this.manager = data().deepCopy(fields()[17].schema(), other.manager);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.store_locator_url)) {
        this.store_locator_url = data().deepCopy(fields()[18].schema(), other.store_locator_url);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.region_id)) {
        this.region_id = data().deepCopy(fields()[19].schema(), other.region_id);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.region)) {
        this.region = data().deepCopy(fields()[20].schema(), other.region);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.zone_id)) {
        this.zone_id = data().deepCopy(fields()[21].schema(), other.zone_id);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.zone)) {
        this.zone = data().deepCopy(fields()[22].schema(), other.zone);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.selling_square_feet)) {
        this.selling_square_feet = data().deepCopy(fields()[23].schema(), other.selling_square_feet);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.total_square_feet)) {
        this.total_square_feet = data().deepCopy(fields()[24].schema(), other.total_square_feet);
        fieldSetFlags()[24] = true;
      }
    }

    /**
      * Gets the value of the 'place_id' field.
      * @return The value.
      */
    public java.lang.String getPlaceId() {
      return place_id;
    }


    /**
      * Sets the value of the 'place_id' field.
      * @param value The value of 'place_id'.
      * @return This builder.
      */
    public locations.events.stores.store.Builder setPlaceId(java.lang.String value) {
      validate(fields()[0], value);
      this.place_id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'place_id' field has been set.
      * @return True if the 'place_id' field has been set, false otherwise.
      */
    public boolean hasPlaceId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'place_id' field.
      * @return This builder.
      */
    public locations.events.stores.store.Builder clearPlaceId() {
      place_id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'brand' field.
      * @return The value.
      */
    public java.lang.String getBrand() {
      return brand;
    }


    /**
      * Sets the value of the 'brand' field.
      * @param value The value of 'brand'.
      * @return This builder.
      */
    public locations.events.stores.store.Builder setBrand(java.lang.String value) {
      validate(fields()[1], value);
      this.brand = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'brand' field has been set.
      * @return True if the 'brand' field has been set, false otherwise.
      */
    public boolean hasBrand() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'brand' field.
      * @return This builder.
      */
    public locations.events.stores.store.Builder clearBrand() {
      brand = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'legacy_sainsburys_store_code' field.
      * @return The value.
      */
    public java.lang.String getLegacySainsburysStoreCode() {
      return legacy_sainsburys_store_code;
    }


    /**
      * Sets the value of the 'legacy_sainsburys_store_code' field.
      * @param value The value of 'legacy_sainsburys_store_code'.
      * @return This builder.
      */
    public locations.events.stores.store.Builder setLegacySainsburysStoreCode(java.lang.String value) {
      validate(fields()[2], value);
      this.legacy_sainsburys_store_code = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'legacy_sainsburys_store_code' field has been set.
      * @return True if the 'legacy_sainsburys_store_code' field has been set, false otherwise.
      */
    public boolean hasLegacySainsburysStoreCode() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'legacy_sainsburys_store_code' field.
      * @return This builder.
      */
    public locations.events.stores.store.Builder clearLegacySainsburysStoreCode() {
      legacy_sainsburys_store_code = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'legacy_argos_store_code' field.
      * @return The value.
      */
    public java.lang.String getLegacyArgosStoreCode() {
      return legacy_argos_store_code;
    }


    /**
      * Sets the value of the 'legacy_argos_store_code' field.
      * @param value The value of 'legacy_argos_store_code'.
      * @return This builder.
      */
    public locations.events.stores.store.Builder setLegacyArgosStoreCode(java.lang.String value) {
      validate(fields()[3], value);
      this.legacy_argos_store_code = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'legacy_argos_store_code' field has been set.
      * @return True if the 'legacy_argos_store_code' field has been set, false otherwise.
      */
    public boolean hasLegacyArgosStoreCode() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'legacy_argos_store_code' field.
      * @return This builder.
      */
    public locations.events.stores.store.Builder clearLegacyArgosStoreCode() {
      legacy_argos_store_code = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'ana_number' field.
      * @return The value.
      */
    public java.lang.String getAnaNumber() {
      return ana_number;
    }


    /**
      * Sets the value of the 'ana_number' field.
      * @param value The value of 'ana_number'.
      * @return This builder.
      */
    public locations.events.stores.store.Builder setAnaNumber(java.lang.String value) {
      validate(fields()[4], value);
      this.ana_number = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'ana_number' field has been set.
      * @return True if the 'ana_number' field has been set, false otherwise.
      */
    public boolean hasAnaNumber() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'ana_number' field.
      * @return This builder.
      */
    public locations.events.stores.store.Builder clearAnaNumber() {
      ana_number = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'store_type' field.
      * @return The value.
      */
    public java.lang.String getStoreType() {
      return store_type;
    }


    /**
      * Sets the value of the 'store_type' field.
      * @param value The value of 'store_type'.
      * @return This builder.
      */
    public locations.events.stores.store.Builder setStoreType(java.lang.String value) {
      validate(fields()[5], value);
      this.store_type = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'store_type' field has been set.
      * @return True if the 'store_type' field has been set, false otherwise.
      */
    public boolean hasStoreType() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'store_type' field.
      * @return This builder.
      */
    public locations.events.stores.store.Builder clearStoreType() {
      store_type = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'name' field.
      * @return The value.
      */
    public java.lang.String getName() {
      return name;
    }


    /**
      * Sets the value of the 'name' field.
      * @param value The value of 'name'.
      * @return This builder.
      */
    public locations.events.stores.store.Builder setName(java.lang.String value) {
      validate(fields()[6], value);
      this.name = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'name' field has been set.
      * @return True if the 'name' field has been set, false otherwise.
      */
    public boolean hasName() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'name' field.
      * @return This builder.
      */
    public locations.events.stores.store.Builder clearName() {
      name = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'display_name' field.
      * @return The value.
      */
    public java.lang.String getDisplayName() {
      return display_name;
    }


    /**
      * Sets the value of the 'display_name' field.
      * @param value The value of 'display_name'.
      * @return This builder.
      */
    public locations.events.stores.store.Builder setDisplayName(java.lang.String value) {
      validate(fields()[7], value);
      this.display_name = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'display_name' field has been set.
      * @return True if the 'display_name' field has been set, false otherwise.
      */
    public boolean hasDisplayName() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'display_name' field.
      * @return This builder.
      */
    public locations.events.stores.store.Builder clearDisplayName() {
      display_name = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'parent_store' field.
      * @return The value.
      */
    public java.lang.String getParentStore() {
      return parent_store;
    }


    /**
      * Sets the value of the 'parent_store' field.
      * @param value The value of 'parent_store'.
      * @return This builder.
      */
    public locations.events.stores.store.Builder setParentStore(java.lang.String value) {
      validate(fields()[8], value);
      this.parent_store = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'parent_store' field has been set.
      * @return True if the 'parent_store' field has been set, false otherwise.
      */
    public boolean hasParentStore() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'parent_store' field.
      * @return This builder.
      */
    public locations.events.stores.store.Builder clearParentStore() {
      parent_store = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'current_status' field.
      * @return The value.
      */
    public java.lang.String getCurrentStatus() {
      return current_status;
    }


    /**
      * Sets the value of the 'current_status' field.
      * @param value The value of 'current_status'.
      * @return This builder.
      */
    public locations.events.stores.store.Builder setCurrentStatus(java.lang.String value) {
      validate(fields()[9], value);
      this.current_status = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'current_status' field has been set.
      * @return True if the 'current_status' field has been set, false otherwise.
      */
    public boolean hasCurrentStatus() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'current_status' field.
      * @return This builder.
      */
    public locations.events.stores.store.Builder clearCurrentStatus() {
      current_status = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'future_status' field.
      * @return The value.
      */
    public java.lang.String getFutureStatus() {
      return future_status;
    }


    /**
      * Sets the value of the 'future_status' field.
      * @param value The value of 'future_status'.
      * @return This builder.
      */
    public locations.events.stores.store.Builder setFutureStatus(java.lang.String value) {
      validate(fields()[10], value);
      this.future_status = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'future_status' field has been set.
      * @return True if the 'future_status' field has been set, false otherwise.
      */
    public boolean hasFutureStatus() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'future_status' field.
      * @return This builder.
      */
    public locations.events.stores.store.Builder clearFutureStatus() {
      future_status = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'open_date' field.
      * @return The value.
      */
    public java.time.LocalDate getOpenDate() {
      return open_date;
    }


    /**
      * Sets the value of the 'open_date' field.
      * @param value The value of 'open_date'.
      * @return This builder.
      */
    public locations.events.stores.store.Builder setOpenDate(java.time.LocalDate value) {
      validate(fields()[11], value);
      this.open_date = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'open_date' field has been set.
      * @return True if the 'open_date' field has been set, false otherwise.
      */
    public boolean hasOpenDate() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'open_date' field.
      * @return This builder.
      */
    public locations.events.stores.store.Builder clearOpenDate() {
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'close_date' field.
      * @return The value.
      */
    public java.time.LocalDate getCloseDate() {
      return close_date;
    }


    /**
      * Sets the value of the 'close_date' field.
      * @param value The value of 'close_date'.
      * @return This builder.
      */
    public locations.events.stores.store.Builder setCloseDate(java.time.LocalDate value) {
      validate(fields()[12], value);
      this.close_date = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'close_date' field has been set.
      * @return True if the 'close_date' field has been set, false otherwise.
      */
    public boolean hasCloseDate() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'close_date' field.
      * @return This builder.
      */
    public locations.events.stores.store.Builder clearCloseDate() {
      close_date = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'store_opening_message' field.
      * @return The value.
      */
    public java.lang.String getStoreOpeningMessage() {
      return store_opening_message;
    }


    /**
      * Sets the value of the 'store_opening_message' field.
      * @param value The value of 'store_opening_message'.
      * @return This builder.
      */
    public locations.events.stores.store.Builder setStoreOpeningMessage(java.lang.String value) {
      validate(fields()[13], value);
      this.store_opening_message = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'store_opening_message' field has been set.
      * @return True if the 'store_opening_message' field has been set, false otherwise.
      */
    public boolean hasStoreOpeningMessage() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'store_opening_message' field.
      * @return This builder.
      */
    public locations.events.stores.store.Builder clearStoreOpeningMessage() {
      store_opening_message = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'currency_code' field.
      * @return The value.
      */
    public java.lang.String getCurrencyCode() {
      return currency_code;
    }


    /**
      * Sets the value of the 'currency_code' field.
      * @param value The value of 'currency_code'.
      * @return This builder.
      */
    public locations.events.stores.store.Builder setCurrencyCode(java.lang.String value) {
      validate(fields()[14], value);
      this.currency_code = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'currency_code' field has been set.
      * @return True if the 'currency_code' field has been set, false otherwise.
      */
    public boolean hasCurrencyCode() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'currency_code' field.
      * @return This builder.
      */
    public locations.events.stores.store.Builder clearCurrencyCode() {
      currency_code = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'vat_region' field.
      * @return The value.
      */
    public java.lang.String getVatRegion() {
      return vat_region;
    }


    /**
      * Sets the value of the 'vat_region' field.
      * @param value The value of 'vat_region'.
      * @return This builder.
      */
    public locations.events.stores.store.Builder setVatRegion(java.lang.String value) {
      validate(fields()[15], value);
      this.vat_region = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'vat_region' field has been set.
      * @return True if the 'vat_region' field has been set, false otherwise.
      */
    public boolean hasVatRegion() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'vat_region' field.
      * @return This builder.
      */
    public locations.events.stores.store.Builder clearVatRegion() {
      vat_region = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'phone' field.
      * @return The value.
      */
    public java.lang.String getPhone() {
      return phone;
    }


    /**
      * Sets the value of the 'phone' field.
      * @param value The value of 'phone'.
      * @return This builder.
      */
    public locations.events.stores.store.Builder setPhone(java.lang.String value) {
      validate(fields()[16], value);
      this.phone = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'phone' field has been set.
      * @return True if the 'phone' field has been set, false otherwise.
      */
    public boolean hasPhone() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'phone' field.
      * @return This builder.
      */
    public locations.events.stores.store.Builder clearPhone() {
      phone = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'manager' field.
      * @return The value.
      */
    public java.lang.String getManager() {
      return manager;
    }


    /**
      * Sets the value of the 'manager' field.
      * @param value The value of 'manager'.
      * @return This builder.
      */
    public locations.events.stores.store.Builder setManager(java.lang.String value) {
      validate(fields()[17], value);
      this.manager = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
      * Checks whether the 'manager' field has been set.
      * @return True if the 'manager' field has been set, false otherwise.
      */
    public boolean hasManager() {
      return fieldSetFlags()[17];
    }


    /**
      * Clears the value of the 'manager' field.
      * @return This builder.
      */
    public locations.events.stores.store.Builder clearManager() {
      manager = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
      * Gets the value of the 'store_locator_url' field.
      * @return The value.
      */
    public java.lang.String getStoreLocatorUrl() {
      return store_locator_url;
    }


    /**
      * Sets the value of the 'store_locator_url' field.
      * @param value The value of 'store_locator_url'.
      * @return This builder.
      */
    public locations.events.stores.store.Builder setStoreLocatorUrl(java.lang.String value) {
      validate(fields()[18], value);
      this.store_locator_url = value;
      fieldSetFlags()[18] = true;
      return this;
    }

    /**
      * Checks whether the 'store_locator_url' field has been set.
      * @return True if the 'store_locator_url' field has been set, false otherwise.
      */
    public boolean hasStoreLocatorUrl() {
      return fieldSetFlags()[18];
    }


    /**
      * Clears the value of the 'store_locator_url' field.
      * @return This builder.
      */
    public locations.events.stores.store.Builder clearStoreLocatorUrl() {
      store_locator_url = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /**
      * Gets the value of the 'region_id' field.
      * @return The value.
      */
    public java.lang.String getRegionId() {
      return region_id;
    }


    /**
      * Sets the value of the 'region_id' field.
      * @param value The value of 'region_id'.
      * @return This builder.
      */
    public locations.events.stores.store.Builder setRegionId(java.lang.String value) {
      validate(fields()[19], value);
      this.region_id = value;
      fieldSetFlags()[19] = true;
      return this;
    }

    /**
      * Checks whether the 'region_id' field has been set.
      * @return True if the 'region_id' field has been set, false otherwise.
      */
    public boolean hasRegionId() {
      return fieldSetFlags()[19];
    }


    /**
      * Clears the value of the 'region_id' field.
      * @return This builder.
      */
    public locations.events.stores.store.Builder clearRegionId() {
      region_id = null;
      fieldSetFlags()[19] = false;
      return this;
    }

    /**
      * Gets the value of the 'region' field.
      * @return The value.
      */
    public java.lang.String getRegion() {
      return region;
    }


    /**
      * Sets the value of the 'region' field.
      * @param value The value of 'region'.
      * @return This builder.
      */
    public locations.events.stores.store.Builder setRegion(java.lang.String value) {
      validate(fields()[20], value);
      this.region = value;
      fieldSetFlags()[20] = true;
      return this;
    }

    /**
      * Checks whether the 'region' field has been set.
      * @return True if the 'region' field has been set, false otherwise.
      */
    public boolean hasRegion() {
      return fieldSetFlags()[20];
    }


    /**
      * Clears the value of the 'region' field.
      * @return This builder.
      */
    public locations.events.stores.store.Builder clearRegion() {
      region = null;
      fieldSetFlags()[20] = false;
      return this;
    }

    /**
      * Gets the value of the 'zone_id' field.
      * @return The value.
      */
    public java.lang.String getZoneId() {
      return zone_id;
    }


    /**
      * Sets the value of the 'zone_id' field.
      * @param value The value of 'zone_id'.
      * @return This builder.
      */
    public locations.events.stores.store.Builder setZoneId(java.lang.String value) {
      validate(fields()[21], value);
      this.zone_id = value;
      fieldSetFlags()[21] = true;
      return this;
    }

    /**
      * Checks whether the 'zone_id' field has been set.
      * @return True if the 'zone_id' field has been set, false otherwise.
      */
    public boolean hasZoneId() {
      return fieldSetFlags()[21];
    }


    /**
      * Clears the value of the 'zone_id' field.
      * @return This builder.
      */
    public locations.events.stores.store.Builder clearZoneId() {
      zone_id = null;
      fieldSetFlags()[21] = false;
      return this;
    }

    /**
      * Gets the value of the 'zone' field.
      * @return The value.
      */
    public java.lang.String getZone() {
      return zone;
    }


    /**
      * Sets the value of the 'zone' field.
      * @param value The value of 'zone'.
      * @return This builder.
      */
    public locations.events.stores.store.Builder setZone(java.lang.String value) {
      validate(fields()[22], value);
      this.zone = value;
      fieldSetFlags()[22] = true;
      return this;
    }

    /**
      * Checks whether the 'zone' field has been set.
      * @return True if the 'zone' field has been set, false otherwise.
      */
    public boolean hasZone() {
      return fieldSetFlags()[22];
    }


    /**
      * Clears the value of the 'zone' field.
      * @return This builder.
      */
    public locations.events.stores.store.Builder clearZone() {
      zone = null;
      fieldSetFlags()[22] = false;
      return this;
    }

    /**
      * Gets the value of the 'selling_square_feet' field.
      * @return The value.
      */
    public java.lang.String getSellingSquareFeet() {
      return selling_square_feet;
    }


    /**
      * Sets the value of the 'selling_square_feet' field.
      * @param value The value of 'selling_square_feet'.
      * @return This builder.
      */
    public locations.events.stores.store.Builder setSellingSquareFeet(java.lang.String value) {
      validate(fields()[23], value);
      this.selling_square_feet = value;
      fieldSetFlags()[23] = true;
      return this;
    }

    /**
      * Checks whether the 'selling_square_feet' field has been set.
      * @return True if the 'selling_square_feet' field has been set, false otherwise.
      */
    public boolean hasSellingSquareFeet() {
      return fieldSetFlags()[23];
    }


    /**
      * Clears the value of the 'selling_square_feet' field.
      * @return This builder.
      */
    public locations.events.stores.store.Builder clearSellingSquareFeet() {
      selling_square_feet = null;
      fieldSetFlags()[23] = false;
      return this;
    }

    /**
      * Gets the value of the 'total_square_feet' field.
      * @return The value.
      */
    public java.lang.String getTotalSquareFeet() {
      return total_square_feet;
    }


    /**
      * Sets the value of the 'total_square_feet' field.
      * @param value The value of 'total_square_feet'.
      * @return This builder.
      */
    public locations.events.stores.store.Builder setTotalSquareFeet(java.lang.String value) {
      validate(fields()[24], value);
      this.total_square_feet = value;
      fieldSetFlags()[24] = true;
      return this;
    }

    /**
      * Checks whether the 'total_square_feet' field has been set.
      * @return True if the 'total_square_feet' field has been set, false otherwise.
      */
    public boolean hasTotalSquareFeet() {
      return fieldSetFlags()[24];
    }


    /**
      * Clears the value of the 'total_square_feet' field.
      * @return This builder.
      */
    public locations.events.stores.store.Builder clearTotalSquareFeet() {
      total_square_feet = null;
      fieldSetFlags()[24] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public store build() {
      try {
        store record = new store();
        record.place_id = fieldSetFlags()[0] ? this.place_id : (java.lang.String) defaultValue(fields()[0]);
        record.brand = fieldSetFlags()[1] ? this.brand : (java.lang.String) defaultValue(fields()[1]);
        record.legacy_sainsburys_store_code = fieldSetFlags()[2] ? this.legacy_sainsburys_store_code : (java.lang.String) defaultValue(fields()[2]);
        record.legacy_argos_store_code = fieldSetFlags()[3] ? this.legacy_argos_store_code : (java.lang.String) defaultValue(fields()[3]);
        record.ana_number = fieldSetFlags()[4] ? this.ana_number : (java.lang.String) defaultValue(fields()[4]);
        record.store_type = fieldSetFlags()[5] ? this.store_type : (java.lang.String) defaultValue(fields()[5]);
        record.name = fieldSetFlags()[6] ? this.name : (java.lang.String) defaultValue(fields()[6]);
        record.display_name = fieldSetFlags()[7] ? this.display_name : (java.lang.String) defaultValue(fields()[7]);
        record.parent_store = fieldSetFlags()[8] ? this.parent_store : (java.lang.String) defaultValue(fields()[8]);
        record.current_status = fieldSetFlags()[9] ? this.current_status : (java.lang.String) defaultValue(fields()[9]);
        record.future_status = fieldSetFlags()[10] ? this.future_status : (java.lang.String) defaultValue(fields()[10]);
        record.open_date = fieldSetFlags()[11] ? this.open_date : (java.time.LocalDate) defaultValue(fields()[11]);
        record.close_date = fieldSetFlags()[12] ? this.close_date : (java.time.LocalDate) defaultValue(fields()[12]);
        record.store_opening_message = fieldSetFlags()[13] ? this.store_opening_message : (java.lang.String) defaultValue(fields()[13]);
        record.currency_code = fieldSetFlags()[14] ? this.currency_code : (java.lang.String) defaultValue(fields()[14]);
        record.vat_region = fieldSetFlags()[15] ? this.vat_region : (java.lang.String) defaultValue(fields()[15]);
        record.phone = fieldSetFlags()[16] ? this.phone : (java.lang.String) defaultValue(fields()[16]);
        record.manager = fieldSetFlags()[17] ? this.manager : (java.lang.String) defaultValue(fields()[17]);
        record.store_locator_url = fieldSetFlags()[18] ? this.store_locator_url : (java.lang.String) defaultValue(fields()[18]);
        record.region_id = fieldSetFlags()[19] ? this.region_id : (java.lang.String) defaultValue(fields()[19]);
        record.region = fieldSetFlags()[20] ? this.region : (java.lang.String) defaultValue(fields()[20]);
        record.zone_id = fieldSetFlags()[21] ? this.zone_id : (java.lang.String) defaultValue(fields()[21]);
        record.zone = fieldSetFlags()[22] ? this.zone : (java.lang.String) defaultValue(fields()[22]);
        record.selling_square_feet = fieldSetFlags()[23] ? this.selling_square_feet : (java.lang.String) defaultValue(fields()[23]);
        record.total_square_feet = fieldSetFlags()[24] ? this.total_square_feet : (java.lang.String) defaultValue(fields()[24]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<store>
    WRITER$ = (org.apache.avro.io.DatumWriter<store>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<store>
    READER$ = (org.apache.avro.io.DatumReader<store>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










